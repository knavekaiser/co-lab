{"version":3,"sources":["context/SiteContext.js","context/SocketContext.js","components/Contacts.js","components/Room.js","LandingPage.js","LoginPage.js","RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["SiteContext","createContext","SiteContextProvider","children","useState","user","setUser","seeIfLoggedIn","useCallback","fetch","then","res","json","data","code","catch","err","console","log","useEffect","Provider","value","SocketContext","SocketContextProvider","useContext","onlineSocket","io","query","username","fetcher","url","Contacts","callSocket","contacts","setContacts","online","setOnline","useSwr","on","map","contact","i","name","includes","onClick","emit","host","guests","Audio","peer","ref","useRef","stream","current","srcObject","autoPlay","Room","props","peers","setPeers","socketRef","userAudio","peersRef","roomID","match","params","navigator","mediaDevices","getUserMedia","video","audio","JSON","stringify","users","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","caller","createPeer","id","push","peerID","payload","incomingSignal","addPeer","prev","filter","client","find","p","muted","index","LandingPage","history","useHistory","disconnect","success","uuid","path","component","LoginPage","setUsername","pass","setPass","to","location","state","from","pathname","className","onSubmit","e","preventDefault","method","headers","body","password","alert","onChange","target","type","placeholder","required","Register","setName","email","setEmail","field","autoComplete","resizeWindow","vh","window","innerHeight","document","style","setProperty","PrivateRoute","rest","render","App","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a61d474d.chunk.js","sourcesContent":["import { createContext, useState, useEffect, useCallback } from \"react\";\n\nexport const SiteContext = createContext();\nexport const SiteContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const seeIfLoggedIn = useCallback(() => {\n    fetch(\"/api/authUser\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setUser(data.user);\n        }\n      })\n      .catch((err) => {\n        console.log(\"not logged in\");\n      });\n  }, []);\n  useEffect(seeIfLoggedIn, []);\n  return (\n    <SiteContext.Provider\n      value={{\n        user,\n        setUser,\n      }}\n    >\n      {children}\n    </SiteContext.Provider>\n  );\n};\n","import { createContext, useContext, useState } from \"react\";\nimport { SiteContext } from \"./SiteContext\";\nimport io from \"socket.io-client\";\n\nexport const SocketContext = createContext();\n\nexport const SocketContextProvider = ({ children }) => {\n  const { user } = useContext(SiteContext);\n  const onlineSocket = user\n    ? io(\"/\", {\n        query: {\n          username: user.username,\n        },\n      })\n    : null;\n  return (\n    <SocketContext.Provider value={{ onlineSocket }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"../context/SiteContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport useSwr from \"swr\";\nconst fetcher = (url) => fetch(url).then((res) => res.json());\n\nconst Contacts = () => {\n  const { onlineSocket, callSocket } = useContext(SocketContext);\n  const { user } = useContext(SiteContext);\n  const [contacts, setContacts] = useState(null);\n  const [online, setOnline] = useState([]);\n  const { err, data } = useSwr(\"/api/contacts\", fetcher);\n  useEffect(() => {\n    if (data?.code === \"ok\") {\n      setContacts(data.contacts);\n    }\n  }, [data]);\n  useEffect(() => {\n    onlineSocket.on(\"members_online\", (data) => {\n      setOnline(data);\n    });\n  }, [onlineSocket]);\n  return (\n    <div>\n      <p>Contacts</p>\n      <ul>\n        {contacts ? (\n          contacts.map((contact, i) => (\n            <li key={i}>\n              <p>\n                {contact.name}\n                {online.includes(contact.username) && (\n                  <>\n                    {\" \"}\n                    <span>•</span>\n                    <span\n                      onClick={() => {\n                        onlineSocket.emit(\"new_call\", {\n                          host: user.username,\n                          guests: [contact.username],\n                        });\n                      }}\n                    >\n                      <ion-icon name=\"call-outline\"></ion-icon>\n                    </span>{\" \"}\n                  </>\n                )}\n              </p>\n            </li>\n          ))\n        ) : (\n          <li>Loading</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { SiteContext } from \"../context/SiteContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst Audio = ({ peer }) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    peer.peer?.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return (\n    <div>\n      {peer.username}\n      <audio autoPlay ref={ref} />\n    </div>\n  );\n};\n\nconst Room = (props) => {\n  const { user } = useContext(SiteContext);\n  const { onlineSocket } = useContext(SocketContext);\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userAudio = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n  useEffect(() => {\n    socketRef.current = onlineSocket; // io.connect(\"/\");\n    navigator.mediaDevices\n      .getUserMedia({ video: false, audio: true })\n      .then((stream) => {\n        userAudio.current.srcObject = stream;\n        socketRef.current.emit(\n          \"join room\",\n          JSON.stringify({ roomID, username: user.username })\n        );\n        socketRef.current.on(\"all users\", (users) => {\n          const peers = [];\n          users.forEach(({ userID, username }) => {\n            const peer = createPeer(userID, socketRef.current.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push({ peer, username });\n          });\n          setPeers(peers);\n        });\n\n        socketRef.current.on(\"user joined\", (payload) => {\n          const { callerID, username } = payload.caller;\n          const peer = addPeer(payload.signal, callerID, stream);\n          peersRef.current.push({\n            peerID: callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, { peer, username }]);\n        });\n\n        socketRef.current.on(\"user_left\", (data) => {\n          setPeers((prev) => {\n            const newPeers = prev.filter((client) => client.username === data);\n            return newPeers;\n          });\n        });\n\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n      });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        caller: { callerID, username: user.username },\n        signal,\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", {\n        signal,\n        caller: { callerID },\n      });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <div>\n      <div>\n        self\n        <audio muted ref={userAudio} autoPlay />\n      </div>\n      {peers.map((peer, index) => {\n        return <Audio key={index} peer={peer} />;\n      })}\n    </div>\n  );\n};\n\nexport default Room;\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport { SocketContext } from \"./context/SocketContext\";\nimport Contacts from \"./components/Contacts\";\nimport { Link, useHistory, Route } from \"react-router-dom\";\nimport Room from \"./components/Room\";\nimport { v1 as uuid } from \"uuid\";\n\nconst LandingPage = () => {\n  const history = useHistory();\n  const { setUser } = useContext(SiteContext);\n  const { onlineSocket } = useContext(SocketContext);\n  useEffect(() => {\n    return () => onlineSocket.disconnect();\n  }, []);\n  return (\n    <div>\n      <h1>Co-lab</h1>\n      <Contacts />\n      <button\n        onClick={() => {\n          fetch(\"/api/logout\")\n            .then((res) => res.json())\n            .then(({ user, success }) => {\n              if (success) {\n                setUser(user);\n                history.push(\"/login\");\n              }\n            });\n        }}\n      >\n        logout\n      </button>\n      <button\n        onClick={() => {\n          history.push(`/room/${uuid()}`);\n        }}\n      >\n        Start room\n      </button>\n      <Route path=\"/room/:roomID\" component={Room} />\n    </div>\n  );\n};\nexport default LandingPage;\n","import { useState, useEffect, useContext, useCallback } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const { user, setUser } = useContext(SiteContext);\n  const [username, setUsername] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  if (user) {\n    return <Redirect to={history.location.state?.from.pathname || \"/\"} />;\n  }\n  return (\n    <div className=\"container\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetch(\"/api/login\", {\n            method: \"POST\",\n            headers: { \"Content-type\": \"application/json\" },\n            body: JSON.stringify({ username, password: pass }),\n          })\n            .then((res) => res.json())\n            .then(({ code, user }) => {\n              if (code === \"ok\") {\n                setUser(user);\n                history.push(history.location.state?.from.pathname || \"/\");\n              } else {\n                alert(\"username/password did not match\");\n              }\n            })\n            .catch((err) => {\n              alert(\"something went wrong\");\n              console.log(err);\n            });\n        }}\n      >\n        <input\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n          type=\"text\"\n          placeholder=\"username\"\n          required={true}\n        />\n        <input\n          onChange={(e) => setPass(e.target.value)}\n          value={pass}\n          type=\"password\"\n          placeholder=\"password\"\n          required={true}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <Link to=\"/register\">Register</Link>\n    </div>\n  );\n};\nexport default LoginPage;\n","import { useState, useContext } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Register = () => {\n  const history = useHistory();\n  const { setUser } = useContext(SiteContext);\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetch(\"/api/register\", {\n            method: \"POST\",\n            headers: { \"Content-type\": \"application/json\" },\n            body: JSON.stringify({ name, username, email, pass }),\n          })\n            .then((res) => res.json())\n            .then(({ code, user, field }) => {\n              if (code === \"ok\") {\n                setUser(user);\n                history.push(\"/\");\n              } else if (code === 11000) {\n                alert(`${field} exists`);\n              } else {\n                alert(\"something went wrong\");\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              alert(\"something went wrong\");\n            });\n        }}\n        autoComplete=\"off\"\n      >\n        <input\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n          type=\"text\"\n          placeholder=\"username\"\n          required={true}\n          autoComplete=\"off\"\n        />\n        <input\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n          type=\"text\"\n          placeholder=\"name\"\n          required={true}\n        />\n        <input\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"email\"\n          placeholder=\"email\"\n          required={true}\n        />\n        <input\n          onChange={(e) => setPass(e.target.value)}\n          value={pass}\n          type=\"password\"\n          placeholder=\"password\"\n          required={true}\n          autoComplete=\"new-password\"\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      <Link to=\"/login\">Login</Link>\n    </div>\n  );\n};\n\nexport default Register;\n","import { useState, useEffect, useRef, useContext } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport \"./App.scss\";\nimport LandingPage from \"./LandingPage\";\nimport LoginPage from \"./LoginPage\";\nimport Register from \"./RegisterPage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nfunction resizeWindow() {\n  let vh = window.innerHeight * 0.01;\n  document.body.style.setProperty(\"--vh\", `${vh}px`);\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const { user } = useContext(SiteContext);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => resizeWindow());\n    resizeWindow();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <PrivateRoute path=\"/\">\n          <LandingPage />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { SocketContextProvider } from \"./context/SocketContext\";\nimport { SiteContextProvider } from \"./context/SiteContext\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SiteContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </SiteContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}