{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["socket","io","App","useState","value","setValue","useEffect","on","data","className","onChange","e","target","emit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAmCMA,EAASC,IAAG,yBA2BHC,MAzBf,WAAe,MAGaC,mBAAS,IAHtB,mBAGNC,EAHM,KAGCC,EAHD,KASb,OALAC,qBAAU,WACRN,EAAOO,GAAG,WAAW,SAACC,GACpBH,EAASG,EAAKA,WAEf,IAED,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,iBAEE,uBACEC,SAAU,SAACC,GACTN,EAASM,EAAEC,OAAOR,OAClBJ,EAAOa,KAAK,OAAQ,CAAEL,KAAMG,EAAEC,OAAOR,SAEvCA,MAAOA,UC3CFU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9aa2153d.chunk.js","sourcesContent":["import {\n  useState,\n  useEffect,\n  // useRef,\n  useContext,\n} from \"react\";\nimport { SocketContext } from \"./context/socketContext\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\n\n// function Play() {\n//   const [stream, setStream] = useState(null);\n//   const player = useRef(null);\n//   return (\n//     <div>\n//       <button\n//         onClick={async () => {\n//           await navigator.mediaDevices\n//             .getUserMedia({ audio: true, video: false })\n//             .then((_stream) => {\n//               setStream(_stream);\n//               console.log(_stream);\n//             })\n//             .catch((err) => {\n//               console.log(err);\n//             });\n//         }}\n//       >\n//         play\n//       </button>\n//       {stream && <audio ref={player} src={stream} controls />}\n//     </div>\n//   );\n// }\n\nconst socket = io(\"http://localhost:3002\");\n\nfunction App() {\n  // const socket = useContext(SocketContext);\n  // console.log(socket);\n  const [value, setValue] = useState(\"\");\n  useEffect(() => {\n    socket.on(\"newData\", (data) => {\n      setValue(data.data);\n    });\n  }, []);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        test\n        <input\n          onChange={(e) => {\n            setValue(e.target.value);\n            socket.emit(\"test\", { data: e.target.value });\n          }}\n          value={value}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { SocketContext } from \"./context/socketContext\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}