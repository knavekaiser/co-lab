{"version":3,"sources":["context/SiteContext.js","context/SocketContext.js","components/Contacts.js","components/Room.js","LandingPage.js","LoginPage.js","RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["SiteContext","createContext","SiteContextProvider","children","useState","user","setUser","seeIfLoggedIn","useCallback","fetch","then","res","json","data","code","catch","err","console","log","useEffect","Provider","value","SocketContext","SocketContextProvider","useContext","onlineSocket","io","query","username","callSocket","fetcher","url","Contacts","contacts","setContacts","online","setOnline","useSwr","on","map","contact","i","name","includes","onClick","emit","host","guests","Video","props","ref","useRef","peer","stream","current","srcObject","playsInline","autoPlay","videoConstraints","height","window","innerHeight","width","innerWidth","Room","peers","setPeers","socketRef","userVideo","peersRef","roomID","match","params","connect","navigator","mediaDevices","getUserMedia","video","audio","users","forEach","userID","userToSignal","callerID","Peer","initiator","trickle","signal","createPeer","id","push","peerID","payload","incomingSignal","addPeer","find","p","muted","index","LandingPage","history","useHistory","disconnect","success","uuid","path","component","LoginPage","setUsername","pass","setPass","to","location","state","from","pathname","className","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","password","alert","onChange","target","type","placeholder","required","Register","setName","email","setEmail","field","autoComplete","resizeWindow","vh","document","style","setProperty","PrivateRoute","rest","render","App","addEventListener","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c03f1fdf.chunk.js","sourcesContent":["import { createContext, useState, useEffect, useCallback } from \"react\";\n\nexport const SiteContext = createContext();\nexport const SiteContextProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const seeIfLoggedIn = useCallback(() => {\n    fetch(\"/api/authUser\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setUser(data.user);\n        }\n      })\n      .catch((err) => {\n        console.log(\"not logged in\");\n      });\n  }, []);\n  useEffect(seeIfLoggedIn, []);\n  return (\n    <SiteContext.Provider\n      value={{\n        user,\n        setUser,\n      }}\n    >\n      {children}\n    </SiteContext.Provider>\n  );\n};\n","import { createContext, useContext, useState } from \"react\";\nimport { SiteContext } from \"./SiteContext\";\nimport io from \"socket.io-client\";\n\nexport const SocketContext = createContext();\n\nexport const SocketContextProvider = ({ children }) => {\n  const { user } = useContext(SiteContext);\n  const onlineSocket = user\n    ? io(\"/\", {\n        query: {\n          username: user.username,\n        },\n      })\n    : null;\n  const callSocket = user\n    ? io(\"/call\", {\n        query: {\n          username: user.username,\n        },\n      })\n    : null;\n  return (\n    <SocketContext.Provider value={{ onlineSocket, callSocket }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"../context/SiteContext\";\nimport { SocketContext } from \"../context/SocketContext\";\nimport useSwr from \"swr\";\nconst fetcher = (url) => fetch(url).then((res) => res.json());\n\nconst Contacts = () => {\n  const { onlineSocket, callSocket } = useContext(SocketContext);\n  const { user } = useContext(SiteContext);\n  const [contacts, setContacts] = useState(null);\n  const [online, setOnline] = useState([]);\n  const { err, data } = useSwr(\"/api/contacts\", fetcher);\n  useEffect(() => {\n    if (data?.code === \"ok\") {\n      setContacts(data.contacts);\n    }\n  }, [data]);\n  useEffect(() => {\n    onlineSocket.on(\"members_online\", (data) => {\n      setOnline(data);\n    });\n  }, [onlineSocket]);\n  return (\n    <div>\n      <p>Contacts</p>\n      <ul>\n        {contacts ? (\n          contacts.map((contact, i) => (\n            <li key={i}>\n              <p>\n                {contact.name}\n                {online.includes(contact.username) && (\n                  <>\n                    {\" \"}\n                    <span>•</span>\n                    <span\n                      onClick={() => {\n                        onlineSocket.emit(\"new_call\", {\n                          host: user.username,\n                          guests: [contact.username],\n                        });\n                      }}\n                    >\n                      <ion-icon name=\"call-outline\"></ion-icon>\n                    </span>{\" \"}\n                  </>\n                )}\n              </p>\n            </li>\n          ))\n        ) : (\n          <li>Loading</li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst Video = (props) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    props.peer.on(\"stream\", (stream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n\n  return <video playsInline autoPlay ref={ref} />;\n};\n\nconst videoConstraints = {\n  height: window.innerHeight / 2,\n  width: window.innerWidth / 2,\n};\n\nconst Room = (props) => {\n  const [peers, setPeers] = useState([]);\n  const socketRef = useRef();\n  const userVideo = useRef();\n  const peersRef = useRef([]);\n  const roomID = props.match.params.roomID;\n\n  useEffect(() => {\n    socketRef.current = io.connect(\"/\");\n    navigator.mediaDevices\n      .getUserMedia({ video: videoConstraints, audio: true })\n      .then((stream) => {\n        userVideo.current.srcObject = stream;\n        socketRef.current.emit(\"join room\", roomID);\n        socketRef.current.on(\"all users\", (users) => {\n          const peers = [];\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socketRef.current.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push(peer);\n          });\n          setPeers(peers);\n        });\n\n        socketRef.current.on(\"user joined\", (payload) => {\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, peer]);\n        });\n\n        socketRef.current.on(\"receiving returned signal\", (payload) => {\n          const item = peersRef.current.find((p) => p.peerID === payload.id);\n          item.peer.signal(payload.signal);\n        });\n      });\n  }, []);\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <div>\n      <video muted ref={userVideo} autoPlay playsInline />\n      {peers.map((peer, index) => {\n        return <Video key={index} peer={peer} />;\n      })}\n    </div>\n  );\n};\n\nexport default Room;\n","import { useContext, useEffect, useState } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport { SocketContext } from \"./context/SocketContext\";\nimport Contacts from \"./components/Contacts\";\nimport { Link, useHistory, Route } from \"react-router-dom\";\nimport Room from \"./components/Room\";\nimport { v1 as uuid } from \"uuid\";\n\nconst LandingPage = () => {\n  const history = useHistory();\n  const { setUser } = useContext(SiteContext);\n  const { onlineSocket, callSocket } = useContext(SocketContext);\n  useEffect(() => {\n    return () => onlineSocket.disconnect();\n  }, []);\n  useEffect(() => {\n    callSocket.on(\"call_request\", (data) => {\n      console.log(data, \"is calling\");\n    });\n  }, []);\n  return (\n    <div>\n      <h1>Co-lab</h1>\n      <Contacts />\n      <button\n        onClick={() => {\n          fetch(\"/api/logout\")\n            .then((res) => res.json())\n            .then(({ user, success }) => {\n              if (success) {\n                setUser(user);\n                history.push(\"/login\");\n              }\n            });\n        }}\n      >\n        logout\n      </button>\n      <button\n        onClick={() => {\n          history.push(`/room/${uuid()}`);\n        }}\n      >\n        Start room\n      </button>\n      <Route path=\"/room/:roomID\" component={Room} />\n    </div>\n  );\n};\nexport default LandingPage;\n","import { useState, useEffect, useContext, useCallback } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\n\nconst LoginPage = () => {\n  const history = useHistory();\n  const { user, setUser } = useContext(SiteContext);\n  const [username, setUsername] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  if (user) {\n    return <Redirect to={history.location.state?.from.pathname || \"/\"} />;\n  }\n  return (\n    <div className=\"container\">\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetch(\"/api/login\", {\n            method: \"POST\",\n            headers: { \"Content-type\": \"application/json\" },\n            body: JSON.stringify({ username, password: pass }),\n          })\n            .then((res) => res.json())\n            .then(({ code, user }) => {\n              if (code === \"ok\") {\n                setUser(user);\n                history.push(history.location.state?.from.pathname || \"/\");\n              } else {\n                alert(\"username/password did not match\");\n              }\n            })\n            .catch((err) => {\n              alert(\"something went wrong\");\n              console.log(err);\n            });\n        }}\n      >\n        <input\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n          type=\"text\"\n          placeholder=\"username\"\n          required={true}\n        />\n        <input\n          onChange={(e) => setPass(e.target.value)}\n          value={pass}\n          type=\"password\"\n          placeholder=\"password\"\n          required={true}\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      <Link to=\"/register\">Register</Link>\n    </div>\n  );\n};\nexport default LoginPage;\n","import { useState, useContext } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Register = () => {\n  const history = useHistory();\n  const { setUser } = useContext(SiteContext);\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          fetch(\"/api/register\", {\n            method: \"POST\",\n            headers: { \"Content-type\": \"application/json\" },\n            body: JSON.stringify({ name, username, email, pass }),\n          })\n            .then((res) => res.json())\n            .then(({ code, user, field }) => {\n              if (code === \"ok\") {\n                setUser(user);\n                history.push(\"/\");\n              } else if (code === 11000) {\n                alert(`${field} exists`);\n              } else {\n                alert(\"something went wrong\");\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              alert(\"something went wrong\");\n            });\n        }}\n        autoComplete=\"off\"\n      >\n        <input\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n          type=\"text\"\n          placeholder=\"username\"\n          required={true}\n          autoComplete=\"off\"\n        />\n        <input\n          onChange={(e) => setName(e.target.value)}\n          value={name}\n          type=\"text\"\n          placeholder=\"name\"\n          required={true}\n        />\n        <input\n          onChange={(e) => setEmail(e.target.value)}\n          value={email}\n          type=\"email\"\n          placeholder=\"email\"\n          required={true}\n        />\n        <input\n          onChange={(e) => setPass(e.target.value)}\n          value={pass}\n          type=\"password\"\n          placeholder=\"password\"\n          required={true}\n          autoComplete=\"new-password\"\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      <Link to=\"/login\">Login</Link>\n    </div>\n  );\n};\n\nexport default Register;\n","import { useState, useEffect, useRef, useContext } from \"react\";\nimport { SiteContext } from \"./context/SiteContext\";\nimport \"./App.scss\";\nimport LandingPage from \"./LandingPage\";\nimport LoginPage from \"./LoginPage\";\nimport Register from \"./RegisterPage\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\nfunction resizeWindow() {\n  let vh = window.innerHeight * 0.01;\n  document.body.style.setProperty(\"--vh\", `${vh}px`);\n}\n\nfunction PrivateRoute({ children, ...rest }) {\n  const { user } = useContext(SiteContext);\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => resizeWindow());\n    resizeWindow();\n  }, []);\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n        <PrivateRoute path=\"/\">\n          <LandingPage />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport { SocketContextProvider } from \"./context/SocketContext\";\nimport { SiteContextProvider } from \"./context/SiteContext\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <SiteContextProvider>\n      <SocketContextProvider>\n        <App />\n      </SocketContextProvider>\n    </SiteContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}